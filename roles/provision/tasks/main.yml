---
- name: Create SG
  ec2_group:
    name: "{{ sg_group_name }}"
    region: "{{ ec2_region }}" 
    description: "{{ sg_group_name }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{ local_pc_public_ip }}/32"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ local_pc_public_ip }}/32"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ ansible_internal_ip }}/32"
    rules_egress:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

- name: Upload public key to AWS
  ec2_key:
    name: "{{ key_name }}"
    key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"

- name: Create ec2 instance
  ec2:
    group: "{{ sg_group_name }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_instance_ami }}"
    region: "{{ ec2_region }}"
    wait: yes
    wait_timeout: 500
    count: "{{ ec2_instance_count }}"
    instance_tags: 
      EnvName: Test Environment
  environment: "{{ ec2_instance_env }}"
  register: ec2_instances

- name: Wait up to 300 seconds for port 22 to become open
  wait_for:
    port: 22
    host: "{{ item.public_ip }}"
  loop: "{{ ec2_instances.instances }}"
  no_log: True

- name: Add instance public IP to host group
  add_host: 
    hostname: "{{ item.private_ip }}"
    groups: my_ec2
    ansible_host: "{{ item.private_ip }}"
    ansible_user: "{{ ec2_default_user }}"
    ansible_ssh_private_key_file: "~/.ssh/{{ key_name }}"
    ansible_python_interpreter: '/usr/bin/python3'
  loop: "{{ ec2_instances.instances }}"
  no_log: True

- debug:
    msg: "Created instance with IP: {{ item.public_ip }}"
  loop: "{{ ec2_instances.instances }}"
  